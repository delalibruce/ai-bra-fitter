# -*- coding: utf-8 -*-
"""ai bra fitter_hackathon

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/delalibruce/379505934d55f67ad328d5af78b4f613/copy-of-chatbot-with-custom-knowledge-base.ipynb
"""

! git clone https://github.com/irina1nik/context_data.git

!pip install -q gradio
!pip install PyPDF2

!pip install llama-index==0.5.6
!pip install langchain==0.0.148
!pip install docx2txt

from llama_index import SimpleDirectoryReader, GPTListIndex, readers, GPTSimpleVectorIndex, LLMPredictor, PromptHelper, ServiceContext
from langchain import OpenAI
import sys
import os
import PyPDF2
from IPython.display import Markdown, display

def construct_index(directory_path):
    # set maximum input size
    max_input_size = 4096
    # set number of output tokens
    num_outputs = 2000
    # set maximum chunk overlap
    max_chunk_overlap = 20
    # set chunk size limit
    chunk_size_limit = 600 

    # define prompt helper
    prompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, chunk_size_limit=chunk_size_limit)

    # define LLM
    llm_predictor = LLMPredictor(llm=OpenAI(temperature=0.5, model_name="text-davinci-003", max_tokens=num_outputs))
 
    documents = SimpleDirectoryReader(directory_path).load_data()
    
    service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)
    index = GPTSimpleVectorIndex.from_documents(documents, service_context=service_context)

    index.save_to_disk('index.json')

    return index

def ask_ai(your_question):
    index = GPTSimpleVectorIndex.load_from_disk('index.json')
    while True: 
        query = your_question
        response = index.query(query)
        display(Markdown(f"Response: <b>{response.response}</b>"))
        return response

os.environ["OPENAI_API_KEY"] = input("Paste your OpenAI key here and hit enter:")

construct_index("context_data/data")

import gradio

gradio.Interface(ask_ai, "text", "text", title = "A Bra That (Maybe?) Fits").launch(share=True)